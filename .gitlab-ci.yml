
variables:
  REPO_NAME: gitlab.roessner-net.de/croessner/geoip-policyd
  GOOS: linux
  GOARCH: amd64

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  #- deploy

format:
  image: golang:1.16-alpine
  stage: test
  script:
    - apk add build-base
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

report:
  image: golang:1.16-alpine
  stage: test
  script:
    - go get gotest.tools/gotestsum
    - gotestsum --junitfile report.xml --format testname || exit 0
  artifacts:
    when: always
    reports:
      junit: report.xml

compile:
  image: golang:1.16-alpine
  stage: build
  script:
    - apk add build-base    
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/geoip-policyd
  artifacts:
    paths:
      - geoip-policyd

docker-build:
  image: docker:latest
  stage: build
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - sed -i -e "s/@@gittag@@-@@gitcommit@@/$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA/" main.go Dockerfile
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  after_script:
    - docker logout
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
